{"ast":null,"code":"import _asyncToGenerator from \"/Users/shaun/git/shaunwo-private/43-react-jobly/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/shaun/git/shaunwo-private/43-react-jobly/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shaun/git/shaunwo-private/43-react-jobly/src/components/jobs/JobCard.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useContext, useState } from 'react';\nimport './JobCard.css';\n//import UserContext from '../auth/UserContext';\n\n/** Show limited information about a job.\n *\n * Is rendered by JobCardList to show a \"card\" for each job.\n *\n * Receives apply func prop from parent, which is called on apply.\n *\n * JobCardList -> JobCard\n */\n\nfunction JobCard(_ref) {\n  var id = _ref.id,\n    title = _ref.title,\n    salary = _ref.salary,\n    equity = _ref.equity,\n    companyName = _ref.companyName,\n    companyHandle = _ref.companyHandle;\n  console.debug('JobCard');\n  var _useContext = useContext(UserContext),\n    hasAppliedToJob = _useContext.hasAppliedToJob,\n    applyToJob = _useContext.applyToJob;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    applied = _useState2[0],\n    setApplied = _useState2[1];\n  React.useEffect(function updateAppliedStatus() {\n    console.debug('JobCard useEffect updateAppliedStatus', 'id=', id);\n    setApplied(hasAppliedToJob(id));\n  }, [id, hasAppliedToJob]);\n\n  // apply for a job\n  function handleApply(_x) {\n    return _handleApply.apply(this, arguments);\n  } // displaying the job card on the screen\n  function _handleApply() {\n    _handleApply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(evt) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!hasAppliedToJob(id)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              applyToJob(id);\n              setApplied(true);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleApply.apply(this, arguments);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"JobCard card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: 'companies/' + companyHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }, companyName)), salary && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Salary: $\", formatSalary(salary))), equity && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Equity: \", equity)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info font-weight-bold float-right\",\n    onClick: handleApply,\n    disabled: applied,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, applied ? 'Applied' : 'Apply')));\n}\n\n// format salary with commas in between numbers\nfunction formatSalary(salary) {\n  var digitsRev = [];\n  var salaryStr = salary.toString();\n  for (var i = salaryStr.length - 1; i >= 0; i--) {\n    digitsRev.push(salaryStr[i]);\n    if (i > 0 && i % 3 === 0) digitsRev.push(',');\n  }\n  return digitsRev.reverse().join('');\n}\nexport default JobCard;","map":{"version":3,"names":["React","useContext","useState","JobCard","id","title","salary","equity","companyName","companyHandle","console","debug","UserContext","hasAppliedToJob","applyToJob","applied","setApplied","useEffect","updateAppliedStatus","handleApply","evt","formatSalary","digitsRev","salaryStr","toString","i","length","push","reverse","join"],"sources":["/Users/shaun/git/shaunwo-private/43-react-jobly/src/components/jobs/JobCard.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport './JobCard.css';\n//import UserContext from '../auth/UserContext';\n\n/** Show limited information about a job.\n *\n * Is rendered by JobCardList to show a \"card\" for each job.\n *\n * Receives apply func prop from parent, which is called on apply.\n *\n * JobCardList -> JobCard\n */\n\nfunction JobCard({ id, title, salary, equity, companyName, companyHandle }) {\n\tconsole.debug('JobCard');\n\n\tconst { hasAppliedToJob, applyToJob } = useContext(UserContext);\n\tconst [applied, setApplied] = useState();\n\n\tReact.useEffect(\n\t\tfunction updateAppliedStatus() {\n\t\t\tconsole.debug(\n\t\t\t\t'JobCard useEffect updateAppliedStatus',\n\t\t\t\t'id=',\n\t\t\t\tid\n\t\t\t);\n\n\t\t\tsetApplied(hasAppliedToJob(id));\n\t\t},\n\t\t[id, hasAppliedToJob]\n\t);\n\n\t// apply for a job\n\tasync function handleApply(evt) {\n\t\tif (hasAppliedToJob(id)) return;\n\t\tapplyToJob(id);\n\t\tsetApplied(true);\n\t}\n\n\t// displaying the job card on the screen\n\treturn (\n\t\t<div className=\"JobCard card\">\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<h6 className=\"card-title\">{title}</h6>\n\t\t\t\t<p>\n\t\t\t\t\t<a href={'companies/' + companyHandle}>\n\t\t\t\t\t\t{companyName}\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t{salary && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<small>Salary: ${formatSalary(salary)}</small>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{equity && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<small>Equity: {equity}</small>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-info font-weight-bold float-right\"\n\t\t\t\t\tonClick={handleApply}\n\t\t\t\t\tdisabled={applied}\n\t\t\t\t>\n\t\t\t\t\t{applied ? 'Applied' : 'Apply'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n// format salary with commas in between numbers\nfunction formatSalary(salary) {\n\tconst digitsRev = [];\n\tconst salaryStr = salary.toString();\n\n\tfor (let i = salaryStr.length - 1; i >= 0; i--) {\n\t\tdigitsRev.push(salaryStr[i]);\n\t\tif (i > 0 && i % 3 === 0) digitsRev.push(',');\n\t}\n\n\treturn digitsRev.reverse().join('');\n}\n\nexport default JobCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}