{"ast":null,"code":"import _toConsumableArray from \"/Users/shaun/git/shaunwo-private/43-react-jobly/jobly-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/shaun/git/shaunwo-private/43-react-jobly/jobly-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/shaun/git/shaunwo-private/43-react-jobly/jobly-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shaun/git/shaunwo-private/43-react-jobly/jobly-frontend/src/App.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport Navigation from './paths/Navigation';\nimport Paths from './paths/Routes';\nimport LoadingSpinner from './components/common/LoadingSpinner';\nimport JoblyApi from './private/api/api';\nimport UserContext from './private/auth/UserContext';\nimport jwt from 'jsonwebtoken';\n\n// Key name for storing token in localStorage for \"remember me\" re-login\nexport var TOKEN_STORAGE_ID = 'jobly-token';\nfunction App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    infoLoaded = _useState2[0],\n    setInfoLoaded = _useState2[1];\n  var _useState3 = useState(new Set([])),\n    _useState4 = _slicedToArray(_useState3, 2),\n    applicationIds = _useState4[0],\n    setApplicationIds = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentUser = _useState6[0],\n    setCurrentUser = _useState6[1];\n  var _useLocalStorage = useLocalStorage(TOKEN_STORAGE_ID),\n    _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n    token = _useLocalStorage2[0],\n    setToken = _useLocalStorage2[1];\n  console.debug('App', 'infoLoaded=', infoLoaded, 'currentUser=', currentUser, 'token=', token);\n\n  // Load user info from API. Until a user is logged in and they have a token,\n  // this should not run. It only needs to re-run when a user logs out, so\n  // the value of the token is a dependency for this effect.\n\n  useEffect(function loadUserInfo() {\n    console.debug('App useEffect loadUserInfo', 'token=', token);\n    function getCurrentUser() {\n      return _getCurrentUser.apply(this, arguments);\n    } // set infoLoaded to false while async getCurrentUser runs; once the\n    // data is fetched (or even if an error happens!), this will be set back\n    // to false to control the spinner.\n    function _getCurrentUser() {\n      _getCurrentUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _jwt$decode, username, _currentUser;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!token) {\n                  _context.next = 15;\n                  break;\n                }\n                _context.prev = 1;\n                _jwt$decode = jwt.decode(token), username = _jwt$decode.username; // put the token on the Api class so it can use it to call the API.\n                JoblyApi.token = token;\n                _context.next = 6;\n                return JoblyApi.getCurrentUser(username);\n              case 6:\n                _currentUser = _context.sent;\n                setCurrentUser(_currentUser);\n                setApplicationIds(new Set(_currentUser.applications));\n                _context.next = 15;\n                break;\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                console.error('App loadUserInfo: problem loading', _context.t0);\n                setCurrentUser(null);\n              case 15:\n                setInfoLoaded(true);\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 11]]);\n      }));\n      return _getCurrentUser.apply(this, arguments);\n    }\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n  // handles logout from anywhere on the site\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  // handles signup from anywhere on the site\n  function signup(_x) {\n    return _signup.apply(this, arguments);\n  } // handles login from anywhere on the site\n  function _signup() {\n    _signup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(signupData) {\n      var _token;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return JoblyApi.signup(signupData);\n            case 3:\n              _token = _context2.sent;\n              setToken(_token);\n              return _context2.abrupt(\"return\", {\n                success: true\n              });\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('signup failed', _context2.t0);\n              return _context2.abrupt(\"return\", {\n                success: false,\n                errors: _context2.t0\n              });\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n    return _signup.apply(this, arguments);\n  }\n  function login(_x2) {\n    return _login.apply(this, arguments);\n  } // checks to see if a job has been applied for, yet\n  function _login() {\n    _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(loginData) {\n      var _token2;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log('Inside the function!');\n              _context3.prev = 1;\n              console.log('inside the try');\n              _context3.next = 5;\n              return JoblyApi.login(loginData);\n            case 5:\n              _token2 = _context3.sent;\n              setToken(_token2);\n              console.log('token:' + _token2);\n              return _context3.abrupt(\"return\", {\n                success: true\n              });\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('login failed', _context3.t0);\n              return _context3.abrupt(\"return\", {\n                success: false,\n                errors: _context3.t0\n              });\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 11]]);\n    }));\n    return _login.apply(this, arguments);\n  }\n  function hasAppliedToJob(id) {\n    return applicationIds.has(id);\n  }\n\n  // apply for a job - API call, and update set of ApplicationIds\n  function applyToJob(id) {\n    if (hasAppliedToJob(id)) return;\n    JoblyApi.applyToJob(currentUser.username, id);\n    setApplicationIds(new Set([].concat(_toConsumableArray(applicationIds), [id])));\n  }\n\n  // displaying the spinner on the screen if no other data has been loaded, yet\n  if (!infoLoaded) return /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 26\n    }\n  });\n\n  // displaying the routes and such (for now) on page\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      currentUser: currentUser,\n      setCurrentUser: setCurrentUser,\n      hasAppliedToJob: hasAppliedToJob,\n      applyToJob: applyToJob\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    logout: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Paths, {\n    login: login,\n    signup: signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 6\n    }\n  }))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","useLocalStorage","Navigation","Paths","LoadingSpinner","JoblyApi","UserContext","jwt","TOKEN_STORAGE_ID","App","infoLoaded","setInfoLoaded","Set","applicationIds","setApplicationIds","currentUser","setCurrentUser","token","setToken","console","debug","loadUserInfo","getCurrentUser","decode","username","applications","error","logout","signup","signupData","success","errors","login","loginData","log","hasAppliedToJob","id","has","applyToJob"],"sources":["/Users/shaun/git/shaunwo-private/43-react-jobly/jobly-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport Navigation from './paths/Navigation';\nimport Paths from './paths/Routes';\n\nimport LoadingSpinner from './components/common/LoadingSpinner';\nimport JoblyApi from './private/api/api';\nimport UserContext from './private/auth/UserContext';\nimport jwt from 'jsonwebtoken';\n\n// Key name for storing token in localStorage for \"remember me\" re-login\nexport const TOKEN_STORAGE_ID = 'jobly-token';\n\nfunction App() {\n\tconst [infoLoaded, setInfoLoaded] = useState(false);\n\tconst [applicationIds, setApplicationIds] = useState(new Set([]));\n\tconst [currentUser, setCurrentUser] = useState(null);\n\tconst [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n\n\tconsole.debug(\n\t\t'App',\n\t\t'infoLoaded=',\n\t\tinfoLoaded,\n\t\t'currentUser=',\n\t\tcurrentUser,\n\t\t'token=',\n\t\ttoken\n\t);\n\n\t// Load user info from API. Until a user is logged in and they have a token,\n\t// this should not run. It only needs to re-run when a user logs out, so\n\t// the value of the token is a dependency for this effect.\n\n\tuseEffect(\n\t\tfunction loadUserInfo() {\n\t\t\tconsole.debug('App useEffect loadUserInfo', 'token=', token);\n\n\t\t\tasync function getCurrentUser() {\n\t\t\t\tif (token) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet { username } = jwt.decode(token);\n\t\t\t\t\t\t// put the token on the Api class so it can use it to call the API.\n\t\t\t\t\t\tJoblyApi.token = token;\n\t\t\t\t\t\tlet currentUser = await JoblyApi.getCurrentUser(\n\t\t\t\t\t\t\tusername\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsetCurrentUser(currentUser);\n\t\t\t\t\t\tsetApplicationIds(\n\t\t\t\t\t\t\tnew Set(currentUser.applications)\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t'App loadUserInfo: problem loading',\n\t\t\t\t\t\t\terr\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsetCurrentUser(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetInfoLoaded(true);\n\t\t\t}\n\n\t\t\t// set infoLoaded to false while async getCurrentUser runs; once the\n\t\t\t// data is fetched (or even if an error happens!), this will be set back\n\t\t\t// to false to control the spinner.\n\t\t\tsetInfoLoaded(false);\n\t\t\tgetCurrentUser();\n\t\t},\n\t\t[token]\n\t);\n\n\t// handles logout from anywhere on the site\n\tfunction logout() {\n\t\tsetCurrentUser(null);\n\t\tsetToken(null);\n\t}\n\n\t// handles signup from anywhere on the site\n\tasync function signup(signupData) {\n\t\ttry {\n\t\t\tlet token = await JoblyApi.signup(signupData);\n\t\t\tsetToken(token);\n\t\t\treturn { success: true };\n\t\t} catch (errors) {\n\t\t\tconsole.error('signup failed', errors);\n\t\t\treturn { success: false, errors };\n\t\t}\n\t}\n\n\t// handles login from anywhere on the site\n\tasync function login(loginData) {\n\t\tconsole.log('Inside the function!');\n\t\ttry {\n\t\t\tconsole.log('inside the try');\n\t\t\tlet token = await JoblyApi.login(loginData);\n\t\t\tsetToken(token);\n\t\t\tconsole.log('token:' + token);\n\t\t\treturn { success: true };\n\t\t} catch (errors) {\n\t\t\tconsole.error('login failed', errors);\n\t\t\treturn { success: false, errors };\n\t\t}\n\t}\n\n\t// checks to see if a job has been applied for, yet\n\tfunction hasAppliedToJob(id) {\n\t\treturn applicationIds.has(id);\n\t}\n\n\t// apply for a job - API call, and update set of ApplicationIds\n\tfunction applyToJob(id) {\n\t\tif (hasAppliedToJob(id)) return;\n\t\tJoblyApi.applyToJob(currentUser.username, id);\n\t\tsetApplicationIds(new Set([...applicationIds, id]));\n\t}\n\n\t// displaying the spinner on the screen if no other data has been loaded, yet\n\tif (!infoLoaded) return <LoadingSpinner />;\n\n\t// displaying the routes and such (for now) on page\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<UserContext.Provider\n\t\t\t\tvalue={{\n\t\t\t\t\tcurrentUser,\n\t\t\t\t\tsetCurrentUser,\n\t\t\t\t\thasAppliedToJob,\n\t\t\t\t\tapplyToJob,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Navigation logout={logout} />\n\t\t\t\t\t<Paths login={login} signup={signup} />\n\t\t\t\t</div>\n\t\t\t</UserContext.Provider>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}