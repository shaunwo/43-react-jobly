{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/git/shaunwo-private/43-react-jobly/src/jobs/JobCard.js\";\nimport React, { useContext, useState } from 'react';\nimport './JobCard.css';\n//import UserContext from '../auth/UserContext';\n\n/** Show limited information about a job.\n *\n * Is rendered by JobCardList to show a \"card\" for each job.\n *\n * Receives apply func prop from parent, which is called on apply.\n *\n * JobCardList -> JobCard\n */\n\nfunction JobCard(_ref) {\n  var id = _ref.id,\n    title = _ref.title,\n    salary = _ref.salary,\n    equity = _ref.equity,\n    companyName = _ref.companyName;\n  console.debug('JobCard');\n\n  //const { hasAppliedToJob, applyToJob } = useContext(UserContext);\n  /* const [applied, setApplied] = useState();\n  \tReact.useEffect(\n  \tfunction updateAppliedStatus() {\n  \t\tconsole.debug(\n  \t\t\t'JobCard useEffect updateAppliedStatus',\n  \t\t\t'id=',\n  \t\t\tid\n  \t\t);\n  \t\t\tsetApplied(hasAppliedToJob(id));\n  \t},\n  \t[id, hasAppliedToJob]\n  );\n  \t// apply for a job\n  async function handleApply(evt) {\n  \tif (hasAppliedToJob(id)) return;\n  \tapplyToJob(id);\n  \tsetApplied(true);\n  } */\n\n  // displaying the job card on the screen\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"JobCard card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, companyName), salary && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Salary: \", formatSalary(salary))), equity !== undefined && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Equity: \", equity)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger font-weight-bold text-uppercase float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Apply\")));\n}\n// add below the {' '} above: \t\t\t{applied}\n// add inside the opening button tag above: \tonClick={handleApply} disabled={applied}\n// Add inside button tag above: {applied ? 'Applied' : 'Apply'}\n\n/** Render integer salary like '$1,250,343' */\n\nfunction formatSalary(salary) {\n  var digitsRev = [];\n  var salaryStr = salary.toString();\n  for (var i = salaryStr.length - 1; i >= 0; i--) {\n    digitsRev.push(salaryStr[i]);\n    if (i > 0 && i % 3 === 0) digitsRev.push(',');\n  }\n  return digitsRev.reverse().join('');\n}\nexport default JobCard;","map":{"version":3,"names":["React","useContext","useState","JobCard","id","title","salary","equity","companyName","console","debug","formatSalary","undefined","digitsRev","salaryStr","toString","i","length","push","reverse","join"],"sources":["/Users/shaun/git/shaunwo-private/43-react-jobly/src/jobs/JobCard.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport './JobCard.css';\n//import UserContext from '../auth/UserContext';\n\n/** Show limited information about a job.\n *\n * Is rendered by JobCardList to show a \"card\" for each job.\n *\n * Receives apply func prop from parent, which is called on apply.\n *\n * JobCardList -> JobCard\n */\n\nfunction JobCard({ id, title, salary, equity, companyName }) {\n\tconsole.debug('JobCard');\n\n\t//const { hasAppliedToJob, applyToJob } = useContext(UserContext);\n\t/* const [applied, setApplied] = useState();\n\n\tReact.useEffect(\n\t\tfunction updateAppliedStatus() {\n\t\t\tconsole.debug(\n\t\t\t\t'JobCard useEffect updateAppliedStatus',\n\t\t\t\t'id=',\n\t\t\t\tid\n\t\t\t);\n\n\t\t\tsetApplied(hasAppliedToJob(id));\n\t\t},\n\t\t[id, hasAppliedToJob]\n\t);\n\n\t// apply for a job\n\tasync function handleApply(evt) {\n\t\tif (hasAppliedToJob(id)) return;\n\t\tapplyToJob(id);\n\t\tsetApplied(true);\n\t} */\n\n\t// displaying the job card on the screen\n\treturn (\n\t\t<div className=\"JobCard card\">\n\t\t\t{' '}\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<h6 className=\"card-title\">{title}</h6>\n\t\t\t\t<p>{companyName}</p>\n\t\t\t\t{salary && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<small>Salary: {formatSalary(salary)}</small>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{equity !== undefined && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<small>Equity: {equity}</small>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<button className=\"btn btn-danger font-weight-bold text-uppercase float-right\">\n\t\t\t\t\tApply\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n// add below the {' '} above: \t\t\t{applied}\n// add inside the opening button tag above: \tonClick={handleApply} disabled={applied}\n// Add inside button tag above: {applied ? 'Applied' : 'Apply'}\n\n/** Render integer salary like '$1,250,343' */\n\nfunction formatSalary(salary) {\n\tconst digitsRev = [];\n\tconst salaryStr = salary.toString();\n\n\tfor (let i = salaryStr.length - 1; i >= 0; i--) {\n\t\tdigitsRev.push(salaryStr[i]);\n\t\tif (i > 0 && i % 3 === 0) digitsRev.push(',');\n\t}\n\n\treturn digitsRev.reverse().join('');\n}\n\nexport default JobCard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,eAAe;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,OAAO,OAA6C;EAAA,IAA1CC,EAAE,QAAFA,EAAE;IAAEC,KAAK,QAALA,KAAK;IAAEC,MAAM,QAANA,MAAM;IAAEC,MAAM,QAANA,MAAM;IAAEC,WAAW,QAAXA,WAAW;EACxDC,OAAO,CAACC,KAAK,CAAC,SAAS,CAAC;;EAExB;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKC;EACA,oBACC;IAAK,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3B,GAAG,eACJ;IAAK,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzB;IAAI,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEL,KAAK,CAAM,eACvC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIG,WAAW,CAAK,EACnBF,MAAM,iBACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAAgBK,YAAY,CAACL,MAAM,CAAC,CAAS,CAE9C,EACAC,MAAM,KAAKK,SAAS,iBACpB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAAgBL,MAAM,CAAS,CAEhC,eACD;IAAQ,SAAS,EAAC,4DAA4D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAErE,CACJ,CACD;AAER;AACA;AACA;AACA;;AAEA;;AAEA,SAASI,YAAY,CAACL,MAAM,EAAE;EAC7B,IAAMO,SAAS,GAAG,EAAE;EACpB,IAAMC,SAAS,GAAGR,MAAM,CAACS,QAAQ,EAAE;EAEnC,KAAK,IAAIC,CAAC,GAAGF,SAAS,CAACG,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC/CH,SAAS,CAACK,IAAI,CAACJ,SAAS,CAACE,CAAC,CAAC,CAAC;IAC5B,IAAIA,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC,EAAEH,SAAS,CAACK,IAAI,CAAC,GAAG,CAAC;EAC9C;EAEA,OAAOL,SAAS,CAACM,OAAO,EAAE,CAACC,IAAI,CAAC,EAAE,CAAC;AACpC;AAEA,eAAejB,OAAO"},"metadata":{},"sourceType":"module"}