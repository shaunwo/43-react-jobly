{"ast":null,"code":"import _asyncToGenerator from \"/Users/shaun/git/shaunwo-private/43-react-jobly/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/shaun/git/shaunwo-private/43-react-jobly/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaun/git/shaunwo-private/43-react-jobly/node_modules/@babel/runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport axios from 'axios';\nvar BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3001';\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\nvar JoblyApi = /*#__PURE__*/function () {\n  function JoblyApi() {\n    _classCallCheck(this, JoblyApi);\n  }\n  _createClass(JoblyApi, null, [{\n    key: \"request\",\n    // the token for interactive with the API will be stored here.\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(endpoint) {\n        var data,\n          method,\n          url,\n          headers,\n          params,\n          message,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                method = _args.length > 2 && _args[2] !== undefined ? _args[2] : 'get';\n                console.debug('API Call:', endpoint, data, method);\n\n                //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n                //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n                url = \"\".concat(BASE_URL, \"/\").concat(endpoint);\n                headers = {\n                  Authorization: \"Bearer \".concat(JoblyApi.token)\n                };\n                params = method === 'get' ? data : {};\n                _context.prev = 6;\n                _context.next = 9;\n                return axios({\n                  url: url,\n                  method: method,\n                  data: data,\n                  params: params,\n                  headers: headers\n                });\n              case 9:\n                return _context.abrupt(\"return\", _context.sent.data);\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](6);\n                console.error('API Error:', _context.t0.response);\n                message = _context.t0.response.data.error.message;\n                throw Array.isArray(message) ? message : [message];\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[6, 12]]);\n      }));\n      function request(_x) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }() // INDIVIDUAL API ROUTES\n    /** Get details on a company by handle. */\n  }, {\n    key: \"getCompany\",\n    value: function () {\n      var _getCompany = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(handle) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.request(\"companies/\".concat(handle));\n              case 2:\n                res = _context2.sent;\n                return _context2.abrupt(\"return\", res.company);\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function getCompany(_x2) {\n        return _getCompany.apply(this, arguments);\n      }\n      return getCompany;\n    }() // get listing of companies - filtered by name if not undefined\n  }, {\n    key: \"getCompanies\",\n    value: function () {\n      var _getCompanies = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(name) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.request('companies', {\n                  name: name\n                });\n              case 2:\n                res = _context3.sent;\n                return _context3.abrupt(\"return\", res.companies);\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function getCompanies(_x3) {\n        return _getCompanies.apply(this, arguments);\n      }\n      return getCompanies;\n    }() // get listing of jobs - filtered by name if not undefined\n  }, {\n    key: \"getJobs\",\n    value: function () {\n      var _getJobs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(title) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.request('jobs', {\n                  title: title\n                });\n              case 2:\n                res = _context4.sent;\n                return _context4.abrupt(\"return\", res.jobs);\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function getJobs(_x4) {\n        return _getJobs.apply(this, arguments);\n      }\n      return getJobs;\n    }() // logging into site with username and password\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(data) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.request('auth/token', data, 'post');\n              case 2:\n                res = _context5.sent;\n                return _context5.abrupt(\"return\", res.token);\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function login(_x5) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }() // signing up for new account on site\n  }, {\n    key: \"signup\",\n    value: function () {\n      var _signup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(data) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.request('auth/register', data, 'post');\n              case 2:\n                res = _context6.sent;\n                return _context6.abrupt(\"return\", res.token);\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function signup(_x6) {\n        return _signup.apply(this, arguments);\n      }\n      return signup;\n    }() // getting the info on the current user\n  }, {\n    key: \"getCurrentUser\",\n    value: function () {\n      var _getCurrentUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(username) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.request(\"users/\".concat(username));\n              case 2:\n                res = _context7.sent;\n                return _context7.abrupt(\"return\", res.user);\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function getCurrentUser(_x7) {\n        return _getCurrentUser.apply(this, arguments);\n      }\n      return getCurrentUser;\n    }() // updating the user profile\n  }, {\n    key: \"saveProfile\",\n    value: function () {\n      var _saveProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(username, data) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.request(\"users/\".concat(username), data, 'patch');\n              case 2:\n                res = _context8.sent;\n                return _context8.abrupt(\"return\", res.user);\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n      function saveProfile(_x8, _x9) {\n        return _saveProfile.apply(this, arguments);\n      }\n      return saveProfile;\n    }() // apply to a job\n  }, {\n    key: \"applyToJob\",\n    value: function () {\n      var _applyToJob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(username, id) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.request(\"users/\".concat(username, \"/jobs/\").concat(id), {}, 'post');\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n      function applyToJob(_x10, _x11) {\n        return _applyToJob.apply(this, arguments);\n      }\n      return applyToJob;\n    }()\n  }]);\n  return JoblyApi;\n}();\nexport default JoblyApi;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","JoblyApi","endpoint","data","method","console","debug","url","headers","Authorization","token","params","error","response","message","Array","isArray","handle","request","res","company","name","companies","title","jobs","username","user","id"],"sources":["/Users/shaun/git/shaunwo-private/43-react-jobly/src/private/api/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3001';\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n\t// the token for interactive with the API will be stored here.\n\tstatic token;\n\n\tstatic async request(endpoint, data = {}, method = 'get') {\n\t\tconsole.debug('API Call:', endpoint, data, method);\n\n\t\t//there are multiple ways to pass an authorization token, this is how you pass it in the header.\n\t\t//this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n\t\tconst url = `${BASE_URL}/${endpoint}`;\n\t\tconst headers = { Authorization: `Bearer ${JoblyApi.token}` };\n\t\tconst params = method === 'get' ? data : {};\n\n\t\ttry {\n\t\t\treturn (await axios({ url, method, data, params, headers }))\n\t\t\t\t.data;\n\t\t} catch (err) {\n\t\t\tconsole.error('API Error:', err.response);\n\t\t\tlet message = err.response.data.error.message;\n\t\t\tthrow Array.isArray(message) ? message : [message];\n\t\t}\n\t}\n\n\t// INDIVIDUAL API ROUTES\n\n\t/** Get details on a company by handle. */\n\n\tstatic async getCompany(handle) {\n\t\tlet res = await this.request(`companies/${handle}`);\n\t\treturn res.company;\n\t}\n\n\t// get listing of companies - filtered by name if not undefined\n\tstatic async getCompanies(name) {\n\t\tlet res = await this.request('companies', { name });\n\t\treturn res.companies;\n\t}\n\n\t// get listing of jobs - filtered by name if not undefined\n\tstatic async getJobs(title) {\n\t\tlet res = await this.request('jobs', { title });\n\t\treturn res.jobs;\n\t}\n\n\t// logging into site with username and password\n\tstatic async login(data) {\n\t\tlet res = await this.request('auth/token', data, 'post');\n\t\treturn res.token;\n\t}\n\n\t// signing up for new account on site\n\tstatic async signup(data) {\n\t\tlet res = await this.request('auth/register', data, 'post');\n\t\treturn res.token;\n\t}\n\n\t// getting the info on the current user\n\tstatic async getCurrentUser(username) {\n\t\tlet res = await this.request(`users/${username}`);\n\t\treturn res.user;\n\t}\n\n\t// updating the user profile\n\tstatic async saveProfile(username, data) {\n\t\tlet res = await this.request(`users/${username}`, data, 'patch');\n\t\treturn res.user;\n\t}\n\n\t// apply to a job\n\tstatic async applyToJob(username, id) {\n\t\tawait this.request(`users/${username}/jobs/${id}`, {}, 'post');\n\t}\n}\n\nexport default JoblyApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}